1. 脚手架创建项目，理解基本结构，主要在extension， 右键菜单：commands， 在package.json中配置
2. bilibili + github 网上学习：vscode 插件开发学习截图代码（），不断优化提示词
3. 理解怎么运行和使用插件 编译后F5， 提示词：@ai-review-tool 运行这个项目, 编译是根据tsconfig.json生成在dist文件夹下面
4. 这个提示词“向我输出一个文档介绍实现的原理，实现代码设计和代码结构，以及遇到的问题和解决方法。”，生成的DEVELOPMENT.md开发文档比较有价值
5. 如果不表明用脚手架创建，cursor会自己一步一步一个文件构建项目


提示词：
接下来是更详细的需求，详细列出要做的事项，包括：
1. 用npm install -g yo generator-code创建工程ai-review-tool。
2. 工程中具体要改动哪些配置（要显示完整的改动部分）。

下面是这个插件的基本需求：
1. 在当前文档中选中需要的代码，点击鼠标右键在弹出的菜单中增加代码审查的选项。
2. 选择代码审查的选项后，生成新的名字相似的文件，文件里面就是优化后的代码，以及代码改进建议。
3. 核心功能“利用AI技术自动审查代码，提供代码质量反馈和改进建议”我希望用采用第三方AI API集成：OpenAI GPT-4 Turbo 实现，并有合理的代码分层结构
4. 我希望用TypeScript， 在关键部分有注解以便我能更快的看懂。
5. 向我输出一个文档介绍实现的原理，实现代码设计和代码结构，以及遇到的问题和解决方法。

问题：
1. 为什么运行后那么多红色字
2. 交互怎么设计，可以看同类型插件 Codiga
3. 有哪些免费可以调试的AI API： 尝试接入混元大模型

尝试了huggingface， 但不知道怎么用它的大模型：https://huggingface.co/settings/tokens/new?tokenType=fineGrained


4. 如何结合业务设计：仍需思考： Review Bot、痛点
AI 审查当成「可高度配置的规则引擎」来用，先从你最痛的几个业务痛点（安全、算法、性能）


 给 Review Bot 一个系统提示：
扣逻辑”的代码，都要检查边界值（负折扣、异常大折扣）、日志接入、幂等处理，并在缺少单元测试时予以标注。

• 针对安全审计场景，再补充一段 prompt：
如果发现直接拼接 SQL，要输出“SQL 注入 风险”，
并给出 parameterized query 范例。